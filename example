package example;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ForLoopsExamples {

    public static void forEachLoop(){
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));
        for(String coffee : coffeeList){
            int index = coffeeList.indexOf(coffee);
            coffee = coffee.toUpperCase();

            coffeeList.set(index,coffee);
        }
        System.out.println(coffeeList);
    }

    public static void forLoopSimpleEnhanced(LocalDate start, LocalDate end, long step) {
        List<LocalDate> datesInRange = new ArrayList<>();
        for(LocalDate day = start; day.isBefore(end); day = day.plusDays(step)) {
            datesInRange.add(day);
        }
        System.out.println(datesInRange);
    }

    public static void forLoopSimple() {
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));
        List<String> coffeeToRemove = new ArrayList<>();
        for (int i = 0; i < coffeeList.size(); i++) {
            System.out.println(i);
            System.out.println(coffeeList.get(i));

            if (i==2){
                coffeeToRemove.add(coffeeList.get(i));
            }
        }
    }

}
package example;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.IntStream;

public class StreamsExample {
    public static void streamFilter() {
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));

        List<String> coffeeListWithoutELetter = coffeeList.stream().filter(coffee -> !coffee.contains("e")).toList();

        System.out.println(coffeeListWithoutELetter);
    }

    public static void streamMap() {
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));

        List<Integer> coffeeLengths = coffeeList.stream().map(coffee -> coffee.length()).toList();

        System.out.println(coffeeLengths);
    }

    public static void streamReduce() {
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));

        String result = coffeeList.stream().reduce((c1, c2) -> c1 + c2).get();

        System.out.println(result);
    }

    public static void insStream(){
        List<String> coffeeList = new ArrayList<>(Arrays.asList("cappuccino","espresso","latte","flat white","americano"));

        IntStream.range(0,coffeeList.size())
                .mapToObj(index -> "Index " + index + ": " + coffeeList.get(index));
    }

}

